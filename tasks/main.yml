---
# tasks file for ovhbastion
- name: install python2 pip
  apt:
    update_cache: yes
    name:
      - python-pip
      - python-setuptools
  when: ansible_facts['python_version'] is version('3', '<')

- name: install python3 pip
  apt:
    update_cache: yes
    name:
      - python3-pip
  when: ansible_facts['python_version'] is version('3', '>=')

- name: install pexpect
  pip:
    name: pexpect

- name: create directory for bastion install
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0775"
  loop:
    - "{{ bastion_install_dir }}"

- name: extract bastion files to install directory
  unarchive:
    src: "{{ bastion_package_url }}"
    dest: "{{ bastion_install_dir }}"
    remote_src: yes
    mode: "0775"
    extra_opts:
      - --strip-components=1

- name: install ttyrec deb package
  apt:
    deb: "{{ ttyrec_package_url }}"

- name: install bastion packages
  shell:
    cmd: "{{ bastion_install_dir }}/bin/admin/packages-check.sh -i -s -t >> .package-install-log"
    chdir: "{{ bastion_install_dir }}"
    creates: .package-install-log

- name: complete basic system configuration
  shell:
    cmd: "{{ bastion_install_dir }}/bin/admin/install --new-install --no-wait >> .config-log"
    chdir: "{{ bastion_install_dir }}"
    creates: .config-log

- name: verify perl module installation
  shell:
    cmd: "{{ bastion_install_dir }}/bin/dev/perl-check.sh >> .perlcheck-log"
    chdir: "{{ bastion_install_dir }}"
    creates: .perlcheck-log

- name: replace default configuration file
  template:
    src: bastion_conf.j2
    dest: /etc/bastion/bastion.conf
    owner: root
    group: root
    mode: '0644'

- name: complete initial account setup
  expect:
    command: "{{ bastion_install_dir }}/bin/admin/setup-first-admin-account.sh {{ bastion_superadmin_uname }} auto"
    responses:
      (?i)passphrase: "{{ ssh_key }}"
    chdir: "{{ bastion_install_dir }}"
  when: bastion_create_admin | bool
  no_log: true